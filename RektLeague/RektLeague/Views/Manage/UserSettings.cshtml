@using RektLeague.Models
@using RektLeague.BusinessRules
@using RektLeague.ModelExtensions
@model UserSettingsViewModel
@{
    ViewBag.Title = "Configurações";
}
<div class="container-fluid">

    <div class="col-md-4 col-md-offset-4 col-xs-8 col-xs-offset-2">
        <form method="post" class="well well" enctype="multipart/form-data">
            <fieldset>
                <legend>Configurações</legend>
                        <div class="row">
                            <div class="text-center">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var imgSrc = IdentityManagerBR.GetUserByteArrayBase64String(User.Identity.Name);
                                    if (imgSrc == String.Empty)
                                    {
                                        imgSrc = "/Content/Images/notloggeduser.png";
                                    }
                                    <img id="imagePreview" src="@imgSrc" alt="Imagem" class="headshot" />
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="text-center">
                                <input id="input-filename" type="text" readonly />
                                <label class="btn btn-primary btn-sm fa fa-upload" for="my-file-selector" style="position:relative;top: -2px;">
                                    <input id="my-file-selector" name="Image" type="file" multiple style="display:none;">
                                </label>
                            </div>
                        </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.DisplayName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-control", @Value= IdentityManagerBR.GetUserDisplayName(User.Identity.Name)})
                        @Html.ValidationMessageFor(m => m.DisplayName, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>*@


                    <div class="form-group">
                        <input type="submit" value="Alterar" class="btn btn-success" />
                    </div>
             
            </fieldset>

        </form>
    </div>
</div>
@Scripts.Render("~/bundles/usersettings")

    